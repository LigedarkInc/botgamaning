//Author: Frodi1998 (https://vk.com/frodi1998)
'use strict'

Object.defineProperty(exports, '__esModule', { value: true });

const { Listener, Logger, ConfigureError } = require('./utils');

const Commander = require('./commander');
const Command = require('./commander/command');
const contextHandler = require('./context/contextHandler');

class Handler {
	constructor(params = {}) {
		if(!params.commandsDirectory) {
			throw new ConfigureError(`Не указана директория команд`)
		}

		let date = new Date()

		for(const [key, value] of Object.entries(params)) {
			this[key] = value
		}
		
		this.listener = new Listener();

		this.logger = new Logger(!params.logsDir? null: 
			`${this.logsDirectory}/${date.getDate()}.${date.getMonth()+1}.${date.getFullYear()}.txt`
		)
	};

	async handler(context) {
		return this.execute(context)
	};

	async execute(context) {
		this.commander = new Commander();

		await Promise.all([
			this.commander.loadFromDirectory(this.commandsDirectory),
			this.listener.emit('command_begin', context, this)
		])
		
		if(!context.command) {
			context.command = context.text
		}
		
		return contextHandler(context, this);
	};
}

exports.Handler = Handler;
exports.Command = Command;
exports.default = Handler;