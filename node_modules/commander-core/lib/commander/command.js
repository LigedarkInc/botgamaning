//Author Frodi1998 (https://vk.com/id194711342)

'use strict'

const { ConfigureError } = require('../utils');

class Command {
	constructor({
		pattern,
		name = '',
		description = '',
		handler,
		commands = [],
		params = {}
	}) {
		if(!pattern) {
			throw new ConfigureError('Не указан pattern команды (регулярное выражение)');
		}

		if(!(pattern instanceof RegExp)) {
			pattern = new RegExp(patern)
		}

		if(!handler) {
			throw new ConfigureError('Не указан обработчик команды');
		}

		if(typeof handler !== 'function') {
			throw new ConfigureError('Обработчик команды не является функцией');
		}

		this.pattern = pattern;
		this.name = name;
		this.description = description;
		
		this.commands = commands;
		this.params = params;

		this.handler = handler
	}

	get [Symbol.toStringTag]() {
		return 'Command'
	}

	/**
	* поиск подкоманд
	*/

	findSubCommand(context) {
        let command;

        for(const subCommand of this.commands) {            
            if (subCommand.pattern.test(context.body[1])) {
                command = subCommand;
            }
        }

        if(!command) {
            return this;
        }

        context.body = context.body[1].match(command.pattern);

        if(command.commands.length) {
            command = command.findSubCommand(context);
        }      

        return command;
	}
}

module.exports = Command;